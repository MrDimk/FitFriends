// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Workout {
  workoutId       Int              @id @default(autoincrement()) @map("workout_id")
  title           String           @default("")
  backgroundImage String           @map("background_image")
  level           UserFitnessLevel
  type            WorkoutType
  duration        WorkoutTime
  price           Int
  calories        Int
  description     String           @default("")
  targetGender    Gender           @map("target_gender")
  video           String           @default("")
  rating          Float            @default(0)
  trainerId       String           @map("trainer_id")
  specialOffer    Boolean          @map("special_offer")
  createdAt       DateTime         @default(now()) @map("created_at")
  publishAt       DateTime         @updatedAt @map("publish_at")
  orders          Order[]
  Review          Review[]

  @@map("workouts")
}

model Order {
  orderId         Int           @id @default(autoincrement()) @map("order_id")
  trainerId       String        @map("trainer_id")
  userId          String        @map("user_id")
  workoutId       Int
  workout         Workout       @relation(fields: [workoutId], references: [workoutId])
  createdAt       DateTime?     @default(now())
  orderType       OrderType?
  trainingPrice   Float
  trainingsAmount Int
  totalCost       Int?          @default(0)
  paymentMethod   PaymentMethod

  @@map("orders")
}

model Review {
  reviewId  Int      @id @default(autoincrement()) @map("review_id")
  userId    String   @map("user_id")
  workoutId Int
  workout   Workout  @relation(fields: [workoutId], references: [workoutId])
  rating    Int
  text      String
  createdAt DateTime @default(now()) @map("created_at")

  @@map("reviews")
}

model JointTraining {
  jointTrainingId Int                 @id @default(autoincrement()) @map("joint_training_id")
  initiatorId     String              @map("initiator_id")
  userId          String              @map("user_id")
  createdAt       DateTime            @default(now()) @map("created_at")
  statusChangedAt DateTime            @map("status_changed_at")
  status          JointTrainingStatus

  @@map("joint_trainings")
}

enum UserFitnessLevel {
  beginner
  intermediate
  professional
}

enum WorkoutType {
  yoga
  running
  boxing
  stretching
  crossfit
  aerobics
  pilates
}

enum WorkoutTime {
  short
  medium
  long
  extra
}

enum Gender {
  female
  male
  unimportant
}

enum PaymentMethod {
  visa
  mir
  umoney
}

enum OrderType {
  membership
}

enum JointTrainingStatus {
  underReview
  rejected
  accepted
}
